// <auto-generated />
using System;
using MacintoshBot.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MacintoshBot.Migrations
{
    [DbContext(typeof(DiscordContext))]
    [Migration("20210222123421_InitialCreate2")]
    partial class InitialCreate2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("DSharpPlus.Entities.DiscordRole", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("IsHoisted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsManaged")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMentionable")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long>("Permissions")
                        .HasColumnType("bigint");

                    b.Property<int>("Position")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DiscordRole");
                });

            modelBuilder.Entity("MacintoshBot.Entities.Group", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("DiscordRoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("EmojiName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<bool>("IsGame")
                        .HasColumnType("boolean");

                    b.HasKey("Name");

                    b.HasIndex("DiscordRoleId")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("MacintoshBot.Entities.Image", b =>
                {
                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Title");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Title = "poggers",
                            Location = "http://themacs.dk/DiscordImages/poggers.jpg"
                        },
                        new
                        {
                            Title = "big-spender",
                            Location = "http://themacs.dk/DiscordImages/big-spender.jpg"
                        });
                });

            modelBuilder.Entity("MacintoshBot.Entities.Message", b =>
                {
                    b.Property<decimal>("DiscordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("RefName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DiscordId");

                    b.HasIndex("DiscordId")
                        .IsUnique();

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            DiscordId = 810921052939091988m,
                            RefName = "role"
                        });
                });

            modelBuilder.Entity("MacintoshBot.Entities.Role", b =>
                {
                    b.Property<string>("RefName")
                        .HasColumnType("text");

                    b.Property<decimal>("DiscordRoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("Rank")
                        .HasColumnType("integer");

                    b.HasKey("RefName");

                    b.HasIndex("DiscordRoleId")
                        .IsUnique();

                    b.HasIndex("RefName")
                        .IsUnique();

                    b.ToTable("LevelRoles");
                });

            modelBuilder.Entity("MacintoshBot.Entities.User", b =>
                {
                    b.Property<decimal>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("JoinedSince")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Xp")
                        .HasColumnType("integer");

                    b.HasKey("UserId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 234395307759108106m,
                            JoinedSince = new DateTime(2021, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Xp = 0
                        },
                        new
                        {
                            UserId = 809373068676956220m,
                            JoinedSince = new DateTime(2021, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Xp = 0
                        },
                        new
                        {
                            UserId = 255367450227507202m,
                            JoinedSince = new DateTime(2021, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Xp = 0
                        },
                        new
                        {
                            UserId = 235025980073181184m,
                            JoinedSince = new DateTime(2021, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Xp = 0
                        },
                        new
                        {
                            UserId = 267259924973748224m,
                            JoinedSince = new DateTime(2021, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Xp = 0
                        },
                        new
                        {
                            UserId = 240570596105125889m,
                            JoinedSince = new DateTime(2021, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Xp = 0
                        },
                        new
                        {
                            UserId = 296642397503488000m,
                            JoinedSince = new DateTime(2021, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Xp = 95
                        },
                        new
                        {
                            UserId = 261086354828427264m,
                            JoinedSince = new DateTime(2021, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Xp = 0
                        });
                });

            modelBuilder.Entity("MacintoshBot.Entities.Group", b =>
                {
                    b.HasOne("DSharpPlus.Entities.DiscordRole", "DiscordRole")
                        .WithOne()
                        .HasForeignKey("MacintoshBot.Entities.Group", "DiscordRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiscordRole");
                });

            modelBuilder.Entity("MacintoshBot.Entities.Role", b =>
                {
                    b.HasOne("DSharpPlus.Entities.DiscordRole", "DiscordRole")
                        .WithOne()
                        .HasForeignKey("MacintoshBot.Entities.Role", "DiscordRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiscordRole");
                });
#pragma warning restore 612, 618
        }
    }
}
